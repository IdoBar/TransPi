/*
================================================================================================
                                    Config File TransPi
================================================================================================
                                Transcriptome Analysis Pipeline
                                Author: Ramon E. Rivera-Vicens
                                Version: 1.0
------------------------------------------------------------------------------------------------
*/

params {

    // -------------------------  EDIT below variables (mandatory)  ------------------------- //
    // --------------------- Can also be specified in the command line ---------------------- //

    // Modify this accordingly (if needed)
    // kmers list (depends on read length!)
    k=""

    // SOAP config file generator
    //#maximal read length
    max_rd_len=""
    //[LIB]
    //#maximal read length in this lib
    rd_len_cutof=""

    // Other options if needed. Leave defaults if unsure.
    //#average insert size
    //avg_ins="200"
    //#if sequence needs to be reversed
    reverse_seq="0"
    //#in which part(s) the reads are used
    asm_flags="3"
    //#minimum aligned length to contigs for a reliable read location (at least 32 for short insert size)
    map_len="32"

    // --------------------------  EDIT below variables if needed  -------------------------- //

    // PATH for rnammer, tmhmm, signalp programs. Require licenses
    // RNAmmer Example: rnam="/home/ubuntu/rnammer/rnammer"
    rnam
    rnammer = false
    // Tmhmm  Example: tmh="/home/ubuntu/tmhmm-2.0c/bin/tmhmm"
    tmh
    tmhmm = false
    // SignalP Example: signalp="/home/ubuntu/signalp-4.1/signalp"
    signalp
    signalP = false

    // Directory for results
    outdir="results"
    // Directory for trace files
    tracedir="pipeline_info"


    /*
    // ------------------------------------     STOP     ------------------------------------ //
    // ---------------------- Do not modify variables below this line. ---------------------- //
    // ------------------------- Proceed to modify processes at end ------------------------- //
    // -------------------------------        If nedded       ------------------------------- //
    */

    // PATH to run analysis
    mypwd
    // Directory for reads
    reads=/reads/*_R{1,2}.fastq.gz"
    // Uniport database PATH
    uniprot
    uniname
    //BUSCO database
    busco3db
    busco4db
    //PFAM file location
    pfloc
    //name of pfam file
    pfname
    //Trinotate sqlite created when installing Trinotate
    Tsql
    //busco4 conda env
    cenv
    // Pipeline options
    help = false
    fullHelp = false
    // Full analysis
    all = false
    // Only Evidential Gene run (one sample per run)
    onlyEvi = false
    // Only annotation analysis
    onlyAnn = false
    // Annotation options
    // SignalP
    signalP = false
    // tmHMM
    tmhmm = false
    // rnammer
    rnammer = false
    // Only Assemblies and Evidential Gene
    onlyAsm = false
    //Test data
    readsTest = null
    //short Transdecoder, no homlogy search PFAM and UniProt
    shortTransdecoder = false
    // Skip quality control
    skipQC = false
    // Skip fastp quality filter step
    skipFilter = false
    // Minimum reads quality for filtering in fastp
    minQual="25"
}

/*
    Proceed to modify processes if needed. Choose the scheduler and options:
        Executor = SLURM, PBS, etc.
        Cluster Options = Partition, Nodes, Priority, etc.
    If running locally leave the comments on "executor" and "clusterOptions".
    For more info see the README and/or Nextflow documentation.
*/

process {
    withLabel: big_cpus {
        cpus='20'
        memory='15 GB'
        executor='slurm'
        clusterOptions='-p lemmium --qos=normal'
    }
    withLabel: med_cpus {
        cpus='8'
        memory='15 GB'
        executor='slurm'
        clusterOptions='-p lemmium --qos=normal'
    }
    withLabel: low_cpus {
        cpus='4'
        memory='15 GB'
        executor='slurm'
        clusterOptions='-p lemmium --qos=normal'
    }
    withLabel: big_mem {
        cpus='20'
        memory='350 GB'
        executor='slurm'
        clusterOptions='-p lemmium --qos=low'
    }
    withLabel: med_mem {
        cpus='15'
        //memory='250 GB'
        memory={ 100.Gb + (task.attempt * 50.Gb)}
        errorStrategy={ task.exitStatus in 137..140 ? 'retry' : 'finish' }
        maxRetries = 2
        executor='slurm'
        clusterOptions='-p lemmium --qos=low'
    }
    withLabel: low_mem {
        cpus='20'
        memory='80 GB'
        executor='slurm'
        clusterOptions='-p lemmium --qos=low'
    }
    errorStrategy='finish'
}

// env Evidential Gene variable (only for nextflow)
env.evi="$baseDir/scripts/evigene"

timeline {
  enabled = true
  file = "${params.outdir}/${params.tracedir}/transpi_timeline.html"
}
report {
  enabled = true
  file = "${params.outdir}/${params.tracedir}/transpi_report.html"
}
trace {
  enabled = true
  file = "${params.outdir}/${params.tracedir}/transpi_trace.txt"
}
dag {
  enabled = true
  file = "${params.outdir}/${params.tracedir}/transpi_dag.html"
}

profiles {
    conda {
        process.conda = "$baseDir/transpi_env.yml"
    }
    docker {
        docker.enabled = true
    }
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
    }
    test {
        includeConfig 'conf/test.config'
    }
}
